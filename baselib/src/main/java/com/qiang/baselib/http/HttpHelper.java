package com.qiang.baselib.http;import java.io.IOException;import okhttp3.Interceptor;import okhttp3.OkHttpClient;import okhttp3.Request;import okhttp3.Response;import okhttp3.logging.HttpLoggingInterceptor;import retrofit2.Retrofit;import retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory;import retrofit2.converter.gson.GsonConverterFactory;/** * @author lixiqiang * @date： 2019/9/10 0010 */public class HttpHelper {    private static HttpHelper instance;    private Retrofit retrofit;    private HttpHelper(String url) {        initRetrofit(url);    }    public static HttpHelper getInstance(String url) {        if (instance == null) {            instance = new HttpHelper(url);        }        return instance;    }    private void initRetrofit(String baseUrl) {        // 设置请求拦截器 打印请求的log        OkHttpClient.Builder builder = new OkHttpClient.Builder();        HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor();        loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);        builder.addInterceptor(loggingInterceptor);        builder.addInterceptor(new HttpHeadInterceptor());        OkHttpClient client = builder.build();        retrofit = new Retrofit.Builder()                .baseUrl(baseUrl)                .client(client)                // 返回Call替换为Observable                .addCallAdapterFactory(RxJava2CallAdapterFactory.create())                // 返回数据类型默认ResponseBody, 添加Gson支持                .addConverterFactory(GsonConverterFactory.create())                .build();    }    public <T> T createReq(Class<T> reqServer) {        return retrofit.create(reqServer);    }    public class HttpHeadInterceptor implements Interceptor {        @Override        public Response intercept(Chain chain) throws IOException {            Request request = chain.request();            Request.Builder builder = request.newBuilder();            builder.addHeader("time", "time");            return chain.proceed(builder.build());        }    }}