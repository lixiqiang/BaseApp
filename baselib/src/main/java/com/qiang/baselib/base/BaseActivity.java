package com.qiang.baselib.base;import android.os.Bundle;import android.util.Log;import androidx.annotation.Nullable;import com.gyf.immersionbar.BarHide;import com.gyf.immersionbar.ImmersionBar;import com.trello.rxlifecycle2.LifecycleTransformer;import com.trello.rxlifecycle2.components.support.RxAppCompatActivity;/** * @author lixiqiang * @dateï¼š 2019/7/25 0025 */public abstract class BaseActivity<P extends BasePresenter> extends RxAppCompatActivity implements BaseView {    private static final String TAG = "BaseActivity";    public P presenter;    public ImmersionBar immersionBar;    @Override    protected void onCreate(@Nullable Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        initImmersionBar();        setContentView(getLayoutId());        presenter = initPresenter();        if (presenter != null) {            presenter.attachView(this);        }        initView(savedInstanceState);    }    private void initImmersionBar() {        immersionBar = ImmersionBar.with(this).statusBarDarkFont(true, 0.2f);        immersionBar.init();    }    public void setKeyboardEnable(boolean keyboardEnable) {        if (immersionBar != null) {            immersionBar.keyboardEnable(keyboardEnable);            immersionBar.init();        }    }    public void setStatusBarDarkFont(boolean isDarkFont) {        if (immersionBar != null) {            immersionBar.statusBarDarkFont(isDarkFont).init();        }    }    public void hideStatusBar(boolean hide) {        if (immersionBar != null) {            if (hide) {                immersionBar.hideBar(BarHide.FLAG_HIDE_BAR).init();            } else {                immersionBar.hideBar(BarHide.FLAG_SHOW_BAR).init();            }        }    }    protected abstract P initPresenter();    protected abstract int getLayoutId();    protected abstract void initView(Bundle savedInstanceState);    @Override    protected void onDestroy() {        Log.e(TAG, "onDestroy");        if (presenter != null) {            presenter.detachView();        }        if (immersionBar != null) {            immersionBar.reset();        }        super.onDestroy();    }    @Override    public LifecycleTransformer bindLifecycle() {        return bindToLifecycle();    }}